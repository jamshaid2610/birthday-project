"""
Project for Week 4 of "Python Programming Essentials".
Collection of functions to process dates.

Be sure to read the project description page for further information
about the expected behavior of the program.
"""

import datetime

#days in month calculation
def days_in_month(year, month):
    """
    Inputs:
      year  - an integer between datetime.MINYEAR and datetime.MAXYEAR
              representing the year
      month - an integer between 1 and 12 representing the month

    Returns:
      The number of days in the input month.
    """
    
    #taking out the number of days in a month
    
    if (datetime.MINYEAR <= year <= datetime.MAXYEAR) and (1 <= month <= 11):
        date1= datetime.date(year,month,1)
        date2= datetime.date(year,month+1,1)
        return (date2 - date1).days
    if (datetime.MINYEAR <= year <= datetime.MAXYEAR) and month == 12:
        date1= datetime.date(year,month,1)
        date2= datetime.date(year+1,1,1)
        return (date2 - date1).days
    else:
        return False

#Calculation for validation of a date
def is_valid_date(year, month, day):
    """
    Inputs:
      year  - an integer representing the year
      month - an integer representing the month
      day   - an integer representing the day

    Returns:
      True if year-month-day is a valid date and
      False otherwise
    """
    
    #Checking if a date is valid or not
    days = days_in_month(year, month)
    if (datetime.MINYEAR <= year <= datetime.MAXYEAR) and (1<= month <= 12) and (1<= day <= days):
        return True
    else:
        return False

#Calculation of days in between given date
def days_between(year1, month1, day1, year2, month2, day2):
    """
    Inputs:
      year1  - an integer representing the year of the first date
      month1 - an integer representing the month of the first date
      day1   - an integer representing the day of the first date
      year2  - an integer representing the year of the second date
      month2 - an integer representing the month of the second date
      day2   - an integer representing the day of the second date

    Returns:
      The number of days from the first date to the second date.
      Returns 0 if either date is invalid or the second date is
      before the first date.
    """
    
 #First validate the dates
    if ((is_valid_date(year1, month1, day1)) and (is_valid_date(year2, month2, day2))):
        
        date3= datetime.date(year1, month1, day1)
        date4= datetime.date(year2, month2, day2)
 #Then calculate the difference
        
        if (date4 > date3):
            number_of_days = date4 - date3
            return number_of_days.days
        else:
            return 0
    else: 
        return 0

#Calculatig someones age in number of days
def age_in_days(year, month, day):
    """
    Inputs:
      year  - an integer representing the birthday year
      month - an integer representing the birthday month
      day   - an integer representing the birthday day

    Returns:
      The age of a person with the input birthday as of today.
      Returns 0 if the input date is invalid or if the input
      date is in the future.
    """
    
#Over here all the calucations are given to calculate number of days
    if (is_valid_date(year, month, day)):
        tday = datetime.date.today()
        bday = datetime.date(year, month, day)
        if (bday<tday):
            person_bday = days_between(year, month, day, tday.year, tday.month, tday.day)
            return person_bday
        else:
            return 0
    else:
        return 0
        
        
#To calculate age in number of days use function age_in_days(year, month, day)
